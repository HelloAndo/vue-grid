{"version":3,"sources":["webpack:///app.4700a52bd1f4c3931460.js","webpack:///webpack/bootstrap 95cc3e94c28670a1b9a4","webpack:///./src/main.js","webpack:///App.vue","webpack:///Pagination.vue","webpack:///Table.vue","webpack:///./src/App.vue?d818","webpack:///./src/components/Pagination.vue?ce49","webpack:///./src/components/Table.vue?30e9","webpack:///./src/App.vue","webpack:///./src/components/Pagination.vue","webpack:///./src/components/Table.vue","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_App","_App2","el","components","App","Object","defineProperty","value","_Table","_Table2","vueGrid","data","checkedFields","gridOption","columns","en","cn","domain","user","props","pageSize","type","Number","rowsTotal","required","page","watch","newVal","oldVal","this","isFirst","pageTotal","isLast","computed","pageChunkCurrent","Math","ceil","pageArr","i","pageChunk","j","length","_i","push","slice","pageChunkIndex","total","isActive","o","_i2","methods","nav","n","activeObj","next","actived","prev","_Pagination","_Pagination2","pagination","pageAble","Boolean","searchAble","indexAble","checkedField","String","Array","checkAble","columnsWidth","sortBy","key","sortKey","sortOrders","indexVal","index","filterRows","$options","filters","filterBy","filterKey","pageStart","columnsCn","cl","arr","columnsEn","__vue_script__","__vue_template__","options","template","global","set","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","test","isReserved","str","charCodeAt","_toString","toString","toNumber","parsed","isNaN","toBoolean","stripQuotes","a","b","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","toLowerCase","classify","classifyRE","bind","fn","ctx","l","arguments","apply","toArray","list","start","ret","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","timeout","args","context","timestamp","result","later","last","Date","now","setTimeout","indexOf","cancellable","cb","cancelled","cancel","looseEqual","JSON","stringify","Cache","limit","size","head","tail","undefined","_keymap","create","pushFilter","filter","lastFilterIndex","trim","tokens","match","filterTokenRE","name","map","processFilterArg","dir","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","text","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","join","single","$eval","inlineFilters","filterRE","appendWithTransition","target","applyTransition","appendChild","beforeWithTransition","before","removeWithTransition","remove","direction","op","transition","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","document","querySelector","inDoc","node","doc","documentElement","parent","parentNode","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","insertBefore","after","nextSibling","removeChild","prepend","firstChild","replaceChild","on","event","useCapture","addEventListener","off","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","setAttribute","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","content","hasChildNodes","trimNode","createDocumentFragment","createElement","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","createTextNode","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","mixins","camelizedId","charAt","assertAsset","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","e","initMixin","prototype","_init","$el","$root","$children","$refs","$els","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","constructor","_updateRef","_runtimeData","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","booleanLiteralRE","resetBatcherState","queue","userQueue","has","circular","waiting","internalQueueDepleted","flushBatcherQueue","runBatcherQueue","devtools","emit","queueIndex","watcher","run","pushWatcher","splice","q","nextTick","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","newDepIds","prevError","twoWay","queued","shallow","traverse","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","childNodes","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","floor","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","concat","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","camelPrefixes","style","setObjectClasses","stringToObject","split","callActivateHooks","called","compileProps","propOptions","attr","names","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","parentPath","makePropsLinkFn","_props","initProp","$get","_bindDir","propDef","coerceProp","getPropDefaultValue","assertProp","expectedType","valid","validator","coerce","pushJob","job","queue$1","flush","f","offsetHeight","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","left","typeCache","forEach","isHidden","rect","getBoundingClientRect","width","height","offsetWidth","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","selfDirs","compileElement","compileTextNode","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","parseModifiers","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","pushDir","interpTokens","hasOneTimeToken","hasOneTime","rawValue","interp","dirDef","transitionRE","bindRE","onRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","noop","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","runtimeData","oldData","removeVm","update","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","events","_initDOMHooks","hook","$emit","Directive","_locked","_bound","_listeners","_host","lifecycleMixin","_ref","refs","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$remove","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","k","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","isSource","shouldPropagate","hasParentCbs","some","$broadcast","source","$dispatch","lifecycleAPI","ready","$compile","limitBy","search","delimiter","convertArray","item","reduce","$value","$key","orderBy","reverse","order","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","mixin","definition","inBrowser","window","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","navigator","userAgent","isAndroid","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","counter","observer","textNode","characterData","setImmediate","shift","entry","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","_maxUpdateCount","warn","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","paramAttributes","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","FOR","IF","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackByKey","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","show","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","cssText","handleObject","handleSingle","isImportant","setProperty","removeProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","modelProp","setAttributeNS","cloak","for","if","vClass","handleArray","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","isSimple","parentWatcher","childWatcher","TYPE_TRANSITION","TYPE_ANIMATION","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","_this","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","css","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay","version"],"mappings":"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","file":"app.4700a52bd1f4c3931460.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./static/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(13);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _App = __webpack_require__(10);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default({\n\t  el: 'body',\n\t  components: { App: _App2.default }\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Table = __webpack_require__(12);\n\t\n\tvar _Table2 = _interopRequireDefault(_Table);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  components: {\n\t    vueGrid: _Table2.default\n\t  },\n\t  data: function data() {\n\t    return {\n\t      checkedFields: [],\n\t      gridOption: {\n\t        columns: [{ en: 'id', cn: '编号' }, { en: 'domain', cn: '网址' }, { en: 'user', cn: '邮箱' }],\n\t        data: [{ id: 1, domain: 'google', user: 'test@github.com' }, { id: 2, domain: 'baidu', user: 'test@github.com' }, { id: 3, domain: 'bing', user: 'test@github.com' }, { id: 4, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 5, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 6, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 7, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 8, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 9, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 10, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 11, domain: 'test1', user: 'test@github.com' }, { id: 12, domain: 'test2', user: 'test@github.com' }, { id: 13, domain: 'test3', user: 'test@github.com' }, { id: 14, domain: 'test4', user: 'test@github.com' }, { id: 15, domain: 'test5', user: 'test@github.com' }, { id: 16, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 17, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 18, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 19, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 20, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 21, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 22, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 23, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 24, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 25, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 26, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 27, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 28, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 29, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 30, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 31, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 32, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 33, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 34, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 35, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 36, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 37, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 38, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' }, { id: 39, domain: '<a href=\"http://www.bing.com\" target=\"_blank\">必应</a>', user: 'test@github.com' }, { id: 40, domain: 'test6', user: 'test@github.com' }]\n\t      }\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = {\n\t  props: {\n\t    pageSize: {\n\t      type: Number,\n\t      default: 10\n\t    },\n\t    rowsTotal: {\n\t      type: Number,\n\t      required: true\n\t    },\n\t    page: {\n\t      type: Number,\n\t      required: true\n\t    }\n\t  },\n\t  watch: {\n\t    rowsTotal: function rowsTotal(newVal, oldVal) {\n\t      if (newVal !== oldVal) {\n\t        this.page = 1;\n\t        this.isFirst = true;\n\t      }\n\t    },\n\t    pageTotal: function pageTotal(newVal, oldVal) {\n\t      if (newVal === 1) {\n\t        this.isFirst = true;\n\t        this.isLast = true;\n\t      }\n\t    }\n\t  },\n\t  computed: {\n\t    pageChunkCurrent: function pageChunkCurrent() {\n\t      var pageTotal = Math.ceil(this.rowsTotal / this.pageSize);\n\t      var pageArr = [];\n\t      for (var i = 0; i < pageTotal; i++) {\n\t        pageArr[i] = i;\n\t      }\n\t      var pageChunk = [];\n\t      var j = pageArr.length;\n\t      for (var _i = 0; _i < j; _i += this.pageSize) {\n\t        pageChunk.push(pageArr.slice(_i, _i + this.pageSize));\n\t      }\n\t      return pageChunk[this.pageChunkIndex];\n\t    },\n\t    pageTotal: function pageTotal() {\n\t      var total = Math.ceil(this.rowsTotal / this.pageSize);\n\t      if (total === 1) {\n\t        this.isLast = true;\n\t        this.isFirst = true;\n\t      }\n\t      return Math.ceil(this.rowsTotal / this.pageSize);\n\t    },\n\t    isActive: function isActive() {\n\t      var pageTotal = this.pageTotal;\n\t      var o = {};\n\t      for (var i = 0; i < pageTotal; i++) {\n\t        o[i + 1] = 0;\n\t      }\n\t      o['actived'] = this.page;\n\t      o[this.page] = 1;\n\t      return o;\n\t    }\n\t  },\n\t  data: function data() {\n\t    var pageTotal = this.pageTotal;\n\t    var pageArr = [];\n\t    for (var i = 0; i < pageTotal; i++) {\n\t      pageArr[i] = i;\n\t    }\n\t    var pageChunk = [];\n\t    var j = pageArr.length;\n\t    for (var _i2 = 0; _i2 < j; _i2 += this.pageSize) {\n\t      pageChunk.push(pageArr.slice(_i2, _i2 + this.pageSize));\n\t    }\n\t    return {\n\t      pageChunk: pageChunk,\n\t      pageChunkIndex: 0,\n\t      isLast: false,\n\t      isFirst: true\n\t    };\n\t  },\n\t  methods: {\n\t    nav: function nav(n) {\n\t      var activeObj = this.isActive;\n\t      activeObj[activeObj['actived']] = 0;\n\t      activeObj[n] = 1;\n\t      activeObj['actived'] = n;\n\t      n === 1 ? this.isFirst = true : this.isFirst = false;\n\t      this.pageTotal === n ? this.isLast = true : this.isLast = false;\n\t      this.page = n;\n\t    },\n\t    next: function next() {\n\t      var activeObj = this.isActive;\n\t      if (activeObj.actived % this.pageSize === 0) {\n\t        this.pageChunkIndex += 1;\n\t        this.pageChunkCurrent = this.pageChunk[this.pageChunkIndex];\n\t      }\n\t      if (activeObj.actived + 1 <= this.pageTotal) {\n\t        this.nav(activeObj.actived + 1);\n\t      }\n\t    },\n\t    prev: function prev() {\n\t      var activeObj = this.isActive;\n\t      if (activeObj.actived - 1 >= 1) {\n\t        this.nav(activeObj.actived - 1);\n\t      }\n\t      if (activeObj.actived % this.pageSize === 0) {\n\t        this.pageChunkIndex -= 1;\n\t        this.pageChunkCurrent = this.pageChunk[this.pageChunkIndex];\n\t      }\n\t    }\n\t  }\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _Pagination = __webpack_require__(11);\n\t\n\tvar _Pagination2 = _interopRequireDefault(_Pagination);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tmodule.exports = {\n\t  components: {\n\t    pagination: _Pagination2.default\n\t  },\n\t  props: {\n\t    pageAble: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    searchAble: {\n\t      type: Boolean,\n\t      default: true\n\t    },\n\t    indexAble: {\n\t      type: Boolean,\n\t      default: false\n\t    },\n\t    checkedField: {\n\t      type: String,\n\t      default: 'id'\n\t    },\n\t    checkedFields: {\n\t      type: Array,\n\t      default: []\n\t    },\n\t    checkAble: {\n\t      type: Boolean,\n\t      default: false\n\t    },\n\t    pageSize: {\n\t      type: Number,\n\t      default: 10\n\t    },\n\t    columns: {\n\t      type: Array,\n\t      required: true\n\t    },\n\t    columnsWidth: {\n\t      type: Array\n\t    },\n\t    data: {\n\t      type: Array,\n\t      required: true\n\t    }\n\t  },\n\t  methods: {\n\t    sortBy: function sortBy(key) {\n\t      this.page = 1;\n\t      this.sortKey = key;\n\t      this.sortOrders[key] *= -1;\n\t    },\n\t    indexVal: function indexVal(index) {\n\t      index = index + 1;\n\t      return index < 10 ? '0' + index : index;\n\t    }\n\t  },\n\t  computed: {\n\t    filterRows: function filterRows() {\n\t      this.page = 1;\n\t      return this.$options.filters.filterBy(this.data, this.filterKey);\n\t    },\n\t    pageStart: function pageStart() {\n\t      return (this.page - 1) * this.pageSize;\n\t    },\n\t    columnsCn: function columnsCn() {\n\t      var columns = this.columns;\n\t      var cl = columns.length;\n\t      var arr = [];\n\t      for (var i = 0; i < cl; i++) {\n\t        arr.push(columns[i]['cn']);\n\t      }\n\t      return arr;\n\t    },\n\t    columnsEn: function columnsEn() {\n\t      var columns = this.columns;\n\t      var cl = columns.length;\n\t      var arr = [];\n\t      for (var i = 0; i < cl; i++) {\n\t        arr.push(columns[i]['en']);\n\t      }\n\t      return arr;\n\t    }\n\t  },\n\t  data: function data() {\n\t    var sortOrders = {};\n\t    var columns = this.columns;\n\t    var cl = columns.length;\n\t    for (var i = 0; i < cl; i++) {\n\t      sortOrders[columns[i]['en']] = 1;\n\t    }\n\t    return {\n\t      sortKey: '',\n\t      filterKey: '',\n\t      page: 1,\n\t      sortOrders: sortOrders\n\t    };\n\t  }\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<vue-grid :check-able=true chekedfiled=id :index-able=true :columns=gridOption.columns :data=gridOption.data :checked-fields.sync=checkedFields></vue-grid>\";\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=pagination-container> <template v-if=\\\"rowsTotal > 0\\\"> <div class=pagination> <ul> <li><a href=javascript:void(0) @click=prev v-bind:class=\\\"{'disabled':isFirst}\\\">&lt</a></li> <li v-for=\\\"n in pageChunkCurrent\\\" v-bind:class=\\\"{'active':isActive[n+1]}\\\" @click=\\\"nav( n+1 )\\\"><a href=javascript:void(0)>{{n + 1}}</a></li> <li><a href=javascript:void(0) @click=next v-bind:class=\\\"{'disabled':isLast}\\\">&gt</a></li> </ul> <div class=stastics>共<span>{{rowsTotal}}</span>条，<span>{{pageTotal}}</span>页</div> </div> </template> </div>\";\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=vue-grid> <template v-if=searchAble> <div class=operation> <div class=search><form v-on:submit.prevent id=search><input name=query v-model=filterKey></form></div> </div> </template> <div class=table> <table grid-select={{checkedFields}}> <thead> <tr> <th v-if=checkAble class=operation-th></th> <th v-if=indexAble class=operation-th></th> <th v-for=\\\"item in columns\\\" @click=sortBy(item.en)> {{item.cn}} </th> </tr> </thead> <tbody> <template v-if=pageAble> <template v-if=\\\"filterRows.length > 0\\\"> <tr v-for=\\\"item in data | filterBy filterKey | orderBy sortKey sortOrders[sortKey] | limitBy pageSize pageStart\\\"> <td v-if=checkAble><input type=checkbox id={{item[checkedField]}} value={{item[checkedField]}} v-model=checkedFields></td> <td v-if=indexAble>{{indexVal($index)}}</td> <td v-for=\\\"key in columnsEn\\\">{{{ item[key] }}} </td> </tr> </template> <template v-else> <tr><td :colspan=100>没有数据</td></tr> </template> </template> <template v-else> <tr v-for=\\\"item in data | filterBy filterKey | orderBy sortKey sortOrders[sortKey]\\\"> <td v-for=\\\"key in columnsEn\\\">{{{ item[key] }}} </td> </tr> </template> </tbody> </table> </div> <template v-if=pageAble> <pagination :page-size=pageSize :rows-total=filterRows.length :page.sync=page></pagination> </template> </div>\";\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(4)\n\t__vue_script__ = __webpack_require__(1)\n\t__vue_template__ = __webpack_require__(7)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(5)\n\t__vue_script__ = __webpack_require__(2)\n\t__vue_template__ = __webpack_require__(8)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(6)\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(9)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) {\n\t(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n\t}\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {/*!\n\t * Vue.js v1.0.20\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined') {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t  if (this.size === this.limit) {\n\t    removed = this.shift();\n\t  }\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  text = text.replace(/\\n/g, '');\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: (\"production\") !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\t\n\tif (false) {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t    warn = function (msg, e) {\n\t      if (hasConsole && (!config.silent || config.debug)) {\n\t        console.warn('[Vue warn]: ' + msg);\n\t        /* istanbul ignore if */\n\t        if (config.debug) {\n\t          if (e) {\n\t            throw e;\n\t          } else {\n\t            console.warn(new Error('Warning Stack Trace').stack);\n\t          }\n\t        }\n\t      }\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      (\"production\") !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  var doc = document.documentElement;\n\t  var parent = node && node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (false) {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        !/^(data|time|rtc|rb)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el);\n\t      if (is) {\n\t        return is;\n\t      } else if (false) {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el) {\n\t  // dynamic syntax\n\t  var exp = getAttr(el, 'is');\n\t  if (exp != null) {\n\t    return { id: exp };\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      (\"production\") !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    (\"production\") !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * 0.11 deprecation warning\n\t */\n\t\n\tstrats.paramAttributes = function () {\n\t  /* istanbul ignore next */\n\t  (\"production\") !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (false) {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        (\"production\") !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (false) {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        (\"production\") !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  var options = {};\n\t  var key;\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      parent = mergeOptions(parent, child.mixins[i], vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  return assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t}\n\t\n\t/**\n\t * Assert asset exists\n\t */\n\t\n\tfunction assertAsset(val, type, id) {\n\t  if (!val) {\n\t    (\"production\") !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n\t  }\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tassertAsset: assertAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initScope().\n\t    this._data = {};\n\t\n\t    // save raw constructor data before merge\n\t    // so that we know which properties are provided at\n\t    // instantiation.\n\t    this._runtimeData = options.data;\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (false) {\n\t  warnNonExistent = function (path) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (false) {\n\t          warnNonExistent(path);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar booleanLiteralRE = /^(?:true|false)$/;\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    (\"production\") !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here becaue the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    (\"production\") !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat true/false as paths\n\t  !booleanLiteralRE.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queueIndex;\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\tvar internalQueueDepleted = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue = [];\n\t  userQueue = [];\n\t  has = {};\n\t  circular = {};\n\t  waiting = internalQueueDepleted = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  runBatcherQueue(queue);\n\t  internalQueueDepleted = true;\n\t  runBatcherQueue(userQueue);\n\t  // dev tool hook\n\t  /* istanbul ignore if */\n\t  if (devtools && config.devtools) {\n\t    devtools.emit('flush');\n\t  }\n\t  resetBatcherState();\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n\t    var watcher = queue[queueIndex];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (false) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        queue.splice(has[id], 1);\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    if (internalQueueDepleted && !watcher.user) {\n\t      // an internal watcher triggered by a user watcher...\n\t      // let's run it immediately after current user watcher is done.\n\t      userQueue.splice(queueIndex + 1, 0, watcher);\n\t    } else {\n\t      // push watcher into appropriate queue\n\t      var q = watcher.user ? userQueue : queue;\n\t      has[id] = q.length;\n\t      q.push(watcher);\n\t      // queue the flush\n\t      if (!waiting) {\n\t        waiting = true;\n\t        nextTick(flushBatcherQueue);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = Object.create(null);\n\t  this.newDepIds = null;\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (false) {\n\t      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      (\"production\") !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t  this.newDepIds = Object.create(null);\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds[id]) {\n\t    this.newDepIds[id] = true;\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds[id]) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds[dep.id]) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  this.depIds = this.newDepIds;\n\t  var tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (false) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tfunction traverse(val) {\n\t  var i, keys;\n\t  if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) traverse(val[i]);\n\t  } else if (isObject(val)) {\n\t    keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) traverse(val[keys[i]]);\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment.\n\t  if (isRealTemplate(node)) {\n\t    trimNode(node.content);\n\t    return node.content;\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el)) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar FOR = 2000;\n\tvar IF = 2000;\n\tvar SLOT = 2100;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      (\"production\") !== 'production' && warn('Alias is required in v-for.');\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.before(prevEl.nextSibling);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        (\"production\") !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          (\"production\") !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else {\n\t        def(value, id, frag);\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      (\"production\") !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * wathcer's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\tif (false) {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.value = _toString(value);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', this.forceUpdate);\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      (\"production\") !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      (\"production\") !== 'production' && warn('v-model does not support element type: ' + tag);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      (\"production\") !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        value = value.replace(importantRE, '').trim();\n\t      }\n\t      this.el.style.setProperty(prop, value, isImportant);\n\t    } else {\n\t      this.el.style.removeProperty(prop);\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return prefixes[i] + prop;\n\t    }\n\t  }\n\t  if (camel in testEl.style) {\n\t    return prop;\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        (\"production\") !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    (\"production\") !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (value && typeof value === 'string') {\n\t      this.handleObject(stringToObject(value));\n\t    } else if (isPlainObject(value)) {\n\t      this.handleObject(value);\n\t    } else if (isArray(value)) {\n\t      this.handleArray(value);\n\t    } else {\n\t      this.cleanup();\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    this.cleanup(value);\n\t    this.prevKeys = Object.keys(value);\n\t    setObjectClasses(this.el, value);\n\t  },\n\t\n\t  handleArray: function handleArray(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val && isPlainObject(val)) {\n\t        setObjectClasses(this.el, val);\n\t      } else if (val && typeof val === 'string') {\n\t        addClass(this.el, val);\n\t      }\n\t    }\n\t    this.prevKeys = value.slice();\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    if (this.prevKeys) {\n\t      var i = this.prevKeys.length;\n\t      while (i--) {\n\t        var key = this.prevKeys[i];\n\t        if (!key) continue;\n\t        if (isPlainObject(key)) {\n\t          var keys = Object.keys(key);\n\t          for (var k = 0; k < keys.length; k++) {\n\t            removeClass(this.el, keys[k]);\n\t          }\n\t        } else {\n\t          removeClass(this.el, key);\n\t        }\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tfunction setObjectClasses(el, obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    if (obj[key]) {\n\t      addClass(el, key);\n\t    }\n\t  }\n\t}\n\t\n\tfunction stringToObject(value) {\n\t  var res = {};\n\t  var keys = value.trim().split(/\\s+/);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    res[keys[i]] = true;\n\t  }\n\t  return res;\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      (\"production\") !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (false) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (false) {\n\t      warn('Do not use $data as prop.');\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (false) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (false) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.');\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (false) {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  var key = prop.path;\n\t  value = coerceProp(prop, value);\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop.options);\n\t  }\n\t  if (assertProp(prop, value)) {\n\t    defineReactive(vm, key, value);\n\t  }\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, options) {\n\t  // no default, return undefined\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    (\"production\") !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction assertProp(prop, value) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = true;\n\t  var expectedType;\n\t  if (type) {\n\t    if (type === String) {\n\t      expectedType = 'string';\n\t      valid = typeof value === expectedType;\n\t    } else if (type === Number) {\n\t      expectedType = 'number';\n\t      valid = typeof value === 'number';\n\t    } else if (type === Boolean) {\n\t      expectedType = 'boolean';\n\t      valid = typeof value === 'boolean';\n\t    } else if (type === Function) {\n\t      expectedType = 'function';\n\t      valid = typeof value === 'function';\n\t    } else if (type === Object) {\n\t      expectedType = 'object';\n\t      valid = isPlainObject(value);\n\t    } else if (type === Array) {\n\t      expectedType = 'array';\n\t      valid = isArray(value);\n\t    } else {\n\t      valid = value instanceof type;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    (\"production\") !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      (\"production\") !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  // coerce is a function\n\t  return coerce(value);\n\t}\n\t\n\tfunction formatType(val) {\n\t  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n\t}\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t    var isSimple = isSimplePath(parentKey);\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      val = coerceProp(prop, val);\n\t      if (assertProp(prop, val)) {\n\t        if (isSimple) {\n\t          withoutConversion(function () {\n\t            child[childKey] = val;\n\t          });\n\t        } else {\n\t          child[childKey] = val;\n\t        }\n\t      }\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    var value = parentWatcher.value;\n\t    if (isSimple && value !== undefined) {\n\t      withoutConversion(function () {\n\t        initProp(child, prop, value);\n\t      });\n\t    } else {\n\t      initProp(child, prop, value);\n\t    }\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (false) {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    if (oldId) {\n\t      removeClass(el, oldId + '-transition');\n\t    }\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (true) {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (false) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (false) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && node.tagName !== 'SCRIPT') {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = value;\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    modifiers = parseModifiers(attr.name);\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (false) {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName);\n\t\n\t              if (false) {\n\t                assertAsset(dirDef, 'directive', dirName);\n\t              }\n\t\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        (\"production\") !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    (\"production\") !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value)) {\n\t      value.trim().split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (false) {\n\t      warn('The \"slot\" attribute must be static.');\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      (\"production\") !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      (\"production\") !== 'production' && warn('data functions should return an object.');\n\t    }\n\t    var props = this._props;\n\t    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n\t        this._proxy(key);\n\t      } else if (false) {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n\t        if (typeof handler === 'function') {\n\t          handler._fromParent = true;\n\t          vm.$on(name.replace(eventRE), handler);\n\t        } else if (false) {\n\t          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        (\"production\") !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (false) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (false) {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (false) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name);\n\t      if (false) {\n\t        assertAsset(fn, 'filter', filter.name);\n\t      }\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value);\n\t      if (false) {\n\t        assertAsset(factory, 'component', value);\n\t      }\n\t    }\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          (\"production\") !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement && !isSimplePath(exp)) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      (\"production\") !== 'production' && warn('$mount() should be called only once.');\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id);\n\t    if (false) {\n\t      assertAsset(partial, 'partial', id);\n\t    }\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n\t    return prev.concat(cur);\n\t  }, []);\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} sortKey\n\t * @param {String} reverse\n\t */\n\t\n\tfunction orderBy(arr, sortKey, reverse) {\n\t  arr = convertArray(arr);\n\t  if (!sortKey) {\n\t    return arr;\n\t  }\n\t  var order = reverse && reverse < 0 ? -1 : 1;\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(function (a, b) {\n\t    if (sortKey !== '$key') {\n\t      if (isObject(a) && '$value' in a) a = a.$value;\n\t      if (isObject(b) && '$value' in b) b = b.$value;\n\t    }\n\t    a = isObject(a) ? getPath(a, sortKey) : a;\n\t    b = isObject(b) ? getPath(b, sortKey) : b;\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  });\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   */\n\t\n\t  currency: function currency(value, _currency) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    var stringified = Math.abs(value).toFixed(2);\n\t    var _int = stringified.slice(0, -3);\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = stringified.slice(-3);\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (false) {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (false) {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          definition.name = id;\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.20';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tif (config.devtools) {\n\t  if (devtools) {\n\t    devtools.emit('init', Vue);\n\t  } else if (false) {\n\t    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t  }\n\t}\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.4700a52bd1f4c3931460.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./static/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 95cc3e94c28670a1b9a4\n **/","import Vue from 'vue'\nimport App from './App'\n\n/* eslint-disable no-new */\nnew Vue({\n  el: 'body',\n  components: { App }\n})\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/main.js\n **/","<template>\n  <vue-grid :check-able=\"true\" chekedFiled=\"id\" :index-able=\"true\" :columns=\"gridOption.columns\" :data=\"gridOption.data\" :checked-fields.sync=\"checkedFields\"></vue-grid>\n</template>\n\n<script>\nimport VueGrid from './components/Table'\n\nexport default {\n  components: {\n    vueGrid: VueGrid\n  },\n  data: function () {\n    return {\n      checkedFields: [],\n      gridOption: {\n        columns: [\n          {en: 'id', cn: '编号'},\n          {en: 'domain', cn: '网址'},\n          {en: 'user', cn: '邮箱'}\n        ],\n        data: [\n          { id: 1, domain: 'google', user: 'test@github.com' },\n          { id: 2, domain: 'baidu', user: 'test@github.com' },\n          { id: 3, domain: 'bing', user: 'test@github.com' },\n          { id: 4, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 5, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 6, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 7, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 8, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 9, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 10, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 11, domain: 'test1', user: 'test@github.com' },\n          { id: 12, domain: 'test2', user: 'test@github.com' },\n          { id: 13, domain: 'test3', user: 'test@github.com' },\n          { id: 14, domain: 'test4', user: 'test@github.com' },\n          { id: 15, domain: 'test5', user: 'test@github.com' },\n          { id: 16, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 17, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 18, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 19, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 20, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 21, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 22, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 23, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 24, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 25, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 26, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 27, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 28, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 29, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 30, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 31, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 32, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 33, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 34, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 35, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 36, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 37, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 38, domain: '<a href=\"http://www.baidu.com\" target=\"_blank\">百度</a>', user: 'test@github.com' },\n          { id: 39, domain: '<a href=\"http://www.bing.com\" target=\"_blank\">必应</a>', user: 'test@github.com' },\n          { id: 40, domain: 'test6', user: 'test@github.com' }\n        ]\n      }\n    }\n  }\n}\n</script>\n\n<style>\nhtml {\n  height: 100%;\n}\n\nbody {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n}\n\n#app {\n  margin-top: -100px;\n  max-width: 600px;\n  font-family: Helvetica, sans-serif;\n  text-align: center;\n}\n\n.logo {\n  width: 100px;\n  height: 100px\n}\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** App.vue?1e16829e\n **/","<style>\n  .pagination {\n    float:right;\n    padding-right:10px;  \n  }\n  .pagination ul {\n    list-style-type:none;\n  }\n  .pagination ul li {\n    display:inline-block;\n    background:#efefef;\n    border-radius:12px;\n    height:24px;\n    width:24px;\n    text-align:center;\n    margin-right:2px;\n  }\n  .pagination ul li:hover{\n    background:#2bbb9c;\n  }\n  .pagination ul li a {\n    text-decoration:none;\n    display:block;\n    width:24px;\n    height:24px;\n    margin:0 auto;\n    padding-top:5px;\n    font-size:14px;\n    color:#999;\n  }\n  .pagination ul li a:hover{\n    color:#fff;\n  }\n  .pagination .active {\n    background:#2bbb9c;  \n  }\n  .pagination .active  a{\n    color:#fff;\n  }\n  .pagination .disabled{\n    background:#fff;\n    cursor:default;\n    color: #fff !important;\n  }\n  .pagination>ul {\n    float:right;\n  }\n  .pagination .stastics {\n    float:right;\n    font-size: 12px;\n    padding-top: 5px;\n    margin-right: 5px;\n    margin-top: 16px;\n  }\n  .pagination .stastics span{\n    color:#2bbb9c;\n  }\n</style>\n\n<template>\n  <div class=\"pagination-container\">\n    <template v-if=\"rowsTotal > 0\">\n      <div class=\"pagination\">\n        <ul>\n          <li><a href=\"javascript:void(0)\" @click=\"prev\"  v-bind:class=\"{'disabled':isFirst}\">&lt</a></li>\n          <li v-for=\"n in pageChunkCurrent\" v-bind:class=\"{'active':isActive[n+1]}\" @click=\"nav( n+1 )\"><a  href=\"javascript:void(0)\">{{n + 1}}</a></li>\n          <li><a href=\"javascript:void(0)\" @click=\"next\" v-bind:class=\"{'disabled':isLast}\">&gt</a></li>\n        </ul>\n        <div class=\"stastics\">共<span>{{rowsTotal}}</span>条，<span>{{pageTotal}}</span>页</div>\n      </div>\n    </template>\n  </div>\n</template>\n\n<script>\n  module.exports = {\n    props: {\n      pageSize: {\n        type: Number,\n        default: 10\n      },\n      rowsTotal: {\n        type: Number,\n        required: true\n      },\n      page: {\n        type: Number,\n        required: true\n      }\n    },\n    watch: {\n      rowsTotal: function (newVal, oldVal) {\n        if (newVal !== oldVal) {\n          // init option when rows changes\n          this.page = 1\n          this.isFirst = true\n        }\n      },\n      pageTotal: function (newVal, oldVal) {\n        if (newVal === 1) {\n          // only one page\n          this.isFirst = true\n          this.isLast = true\n        }\n      }\n    },\n    computed: {\n      pageChunkCurrent: function () {\n        let pageTotal = Math.ceil(this.rowsTotal / this.pageSize)\n        let pageArr = []\n        for (let i = 0; i < pageTotal; i++) {\n          pageArr[i] = i\n        }\n        let pageChunk = []\n        let j = pageArr.length\n        for (let i = 0; i < j; i += this.pageSize) {\n          pageChunk.push(pageArr.slice(i, i + this.pageSize))\n        }\n        return pageChunk[this.pageChunkIndex]\n      },\n      pageTotal: function () {\n        let total = Math.ceil(this.rowsTotal / this.pageSize)\n        if (total === 1) {\n          this.isLast = true\n          this.isFirst = true\n        }\n        return Math.ceil(this.rowsTotal / this.pageSize)\n      },\n      isActive: function () {\n        let pageTotal = this.pageTotal\n        let o = {}\n        for (let i = 0; i < pageTotal; i++) {\n          o[i + 1] = 0\n        }\n        o['actived'] = this.page\n        o[this.page] = 1\n        return o\n      }\n    },\n    data: function () {\n      let pageTotal = this.pageTotal\n      let pageArr = []\n      for (let i = 0; i < pageTotal; i++) {\n        pageArr[i] = i\n      }\n      let pageChunk = []\n      let j = pageArr.length\n      for (let i = 0; i < j; i += this.pageSize) {\n        pageChunk.push(pageArr.slice(i, i + this.pageSize))\n      }\n      return {\n        pageChunk: pageChunk,\n        pageChunkIndex: 0,\n        isLast: false,\n        isFirst: true\n      }\n    },\n    methods: {\n      nav: function (n) {\n        let activeObj = this.isActive\n        activeObj[activeObj['actived']] = 0\n        activeObj[n] = 1\n        activeObj['actived'] = n\n        n === 1 ? this.isFirst = true : this.isFirst = false\n        this.pageTotal === n ? this.isLast = true : this.isLast = false\n        this.page = n\n      },\n      next: function () {\n        let activeObj = this.isActive\n        if (activeObj.actived % this.pageSize === 0) {\n          this.pageChunkIndex += 1\n          this.pageChunkCurrent = this.pageChunk[this.pageChunkIndex]\n        }\n        if (activeObj.actived + 1 <= this.pageTotal) {\n          this.nav(activeObj.actived + 1)\n        }\n      },\n      prev: function () {\n        let activeObj = this.isActive\n        if (activeObj.actived - 1 >= 1) {\n          this.nav(activeObj.actived - 1)\n        }\n        if (activeObj.actived % this.pageSize === 0) {\n          this.pageChunkIndex -= 1\n          this.pageChunkCurrent = this.pageChunk[this.pageChunkIndex]\n        }\n      }\n    }\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Pagination.vue?35e27411\n **/","<style>\n  .vue-grid {\n    width:980px;\n  }\n  .table {\n    padding-bottom: 10px;\n\t\twidth:100%;\n  }\n\t.table table {\n\t\twidth:100%;\n\t\tfont-size:12px;\n    text-align: left;\n\t}\n\t.table thead tr{\n\t\tbackground: #eaf3f6;\n\t\tborder-bottom:2px solid #fff;\n\t}\n  .table thead th {\n\t\tfont-size: 12px;\n    font-weight: bold;\n    line-height: 31px;\n    padding-left: 5px;\n    color: #085982;\n\t\tcursor:pointer;\n  }\n\t.table tbody tr {\n\t\tbackground: #f5f8f9;\n\t\tline-height: 2.6em;\n\t\tmargin-bottom:2px;\n\t\tborder-bottom: 2px solid #fff;\n\t}\n\t.table tbody tr:hover {\n\t\tbackground:#eaf3f6;\n\t}\n\t.table tbody tr td{\n\t\tpadding-left:2px;\n\t}\n\t.arrow.asc {\n\t\tborder-left: 4px solid transparent;\n\t\tborder-right: 4px solid transparent;\n\t\tborder-bottom: 4px solid #fff;\n\t}\n\t.arrow.dsc {\n\t\tborder-left: 4px solid transparent;\n\t\tborder-right: 4px solid transparent;\n\t\tborder-top: 4px solid #fff;\n\t}\n  .operation{\n    height:30px;\n    margin-top:5px;\n    margin-bottom:3px;\n  }\n  .search{\n    float:right;\n  }\t\n  .search input{\n    height:25px;\n  }\n  .table .operation-th {\n    width:30px;\n  }\t\n</style>\n\n<template>\n  <div class=\"vue-grid\">\n  <template v-if=\"searchAble\">\n    <div class=\"operation\">\n      <div class=\"search\"><form v-on:submit.prevent id=\"search\"><input name=\"query\" v-model=\"filterKey\"></div>\n    </div>\n  </template>\n  <div class=\"table\">\n    <table grid-select=\"{{checkedFields}}\">\n      <thead>\n        <tr>\n          <th v-if=\"checkAble\" class=\"operation-th\"></th>\n          <th v-if=\"indexAble\" class=\"operation-th\"></th>\n          <th v-for=\"item in columns\" @click=\"sortBy(item.en)\">\n\t\t\t\t\t  {{item.cn}}\n\t\t\t\t\t</th>\n        </tr>\n      </thead>\n      <tbody>\n        <template v-if=\"pageAble\">\n          <template v-if=\"filterRows.length > 0\">\n            <tr v-for=\"item in data | filterBy filterKey | orderBy sortKey sortOrders[sortKey] | limitBy pageSize pageStart\">\n              <td v-if=\"checkAble\"><input type=\"checkbox\" id=\"{{item[checkedField]}}\" value=\"{{item[checkedField]}}\" v-model=\"checkedFields\"></td>\n              <td v-if=\"indexAble\">{{indexVal($index)}}</td>\n              <td v-for=\"key in columnsEn\" >{{{ item[key] }}} </td>\n            </tr>\n          </template>\n          <template v-else>\n            <tr><td :colspan=\"100\">没有数据</td></tr>\n          </template>\n        </template>\n        <template v-else>\n          <tr v-for=\"item in data | filterBy filterKey | orderBy sortKey sortOrders[sortKey]\">\n            <td v-for=\"key in columnsEn\" >{{{ item[key] }}} </td>\n          </tr>\n        </template>\n      </tbody>\n    </table>\n  </div>\n    <template v-if=\"pageAble\">\n      <pagination :page-size=\"pageSize\" :rows-total=\"filterRows.length\" :page.sync=\"page\"></pagination>\n    </template>\n  </div>\n</template>\n\n<script>\n  import Pagination from './Pagination'\n  module.exports = {\n    components: {\n      pagination: Pagination\n    },\n    props: {\n      pageAble: {\n        type: Boolean,\n        default: true\n      },\n      searchAble: {\n        type: Boolean,\n        default: true\n      },\n      indexAble: {\n        type: Boolean,\n        default: false\n      },\n      checkedField: {\n        type: String,\n        default: 'id'\n      },\n      checkedFields: {\n        type: Array,\n        default: []\n      },\n      checkAble: {\n        type: Boolean,\n        default: false\n      },\n      pageSize: {\n        type: Number,\n        default: 10\n      },\n      columns: {\n        type: Array,\n        required: true\n      },\n      columnsWidth: {\n        type: Array\n      },\n      data: {\n        type: Array,\n        required: true\n      }\n    },\n    methods: {\n      sortBy: function (key) {\n        this.page = 1\n        this.sortKey = key\n        this.sortOrders[key] *= -1\n      },\n      indexVal: function (index) {\n        index = index + 1\n        return index < 10 ? '0' + index : index\n      }\n    },\n    computed: {\n      filterRows: function () {\n        this.page = 1\n        return this.$options.filters.filterBy(this.data, this.filterKey)\n      },\n      pageStart: function () {\n        return (this.page - 1) * this.pageSize\n      },\n      columnsCn: function () {\n        let columns = this.columns\n        let cl = columns.length\n        let arr = []\n        for (let i = 0; i < cl; i++) {\n          arr.push(columns[i]['cn'])\n        }\n        return arr\n      },\n      columnsEn: function () {\n        let columns = this.columns\n        let cl = columns.length\n        let arr = []\n        for (let i = 0; i < cl; i++) {\n          arr.push(columns[i]['en'])\n        }\n        return arr\n      }\n    },\n    data: function () {\n      let sortOrders = {}\n      let columns = this.columns\n      let cl = columns.length\n      for (let i = 0; i < cl; i++) {\n        sortOrders[columns[i]['en']] = 1\n      }\n      return {\n        sortKey: '',\n        filterKey: '',\n        page: 1,\n        sortOrders: sortOrders\n      }\n    }\n  }\n</script>\n\n\n\n/** WEBPACK FOOTER **\n ** Table.vue?4f8c6632\n **/","module.exports = \"<vue-grid :check-able=true chekedfiled=id :index-able=true :columns=gridOption.columns :data=gridOption.data :checked-fields.sync=checkedFields></vue-grid>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = \"<div class=pagination-container> <template v-if=\\\"rowsTotal > 0\\\"> <div class=pagination> <ul> <li><a href=javascript:void(0) @click=prev v-bind:class=\\\"{'disabled':isFirst}\\\">&lt</a></li> <li v-for=\\\"n in pageChunkCurrent\\\" v-bind:class=\\\"{'active':isActive[n+1]}\\\" @click=\\\"nav( n+1 )\\\"><a href=javascript:void(0)>{{n + 1}}</a></li> <li><a href=javascript:void(0) @click=next v-bind:class=\\\"{'disabled':isLast}\\\">&gt</a></li> </ul> <div class=stastics>共<span>{{rowsTotal}}</span>条，<span>{{pageTotal}}</span>页</div> </div> </template> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Pagination.vue\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = \"<div class=vue-grid> <template v-if=searchAble> <div class=operation> <div class=search><form v-on:submit.prevent id=search><input name=query v-model=filterKey></form></div> </div> </template> <div class=table> <table grid-select={{checkedFields}}> <thead> <tr> <th v-if=checkAble class=operation-th></th> <th v-if=indexAble class=operation-th></th> <th v-for=\\\"item in columns\\\" @click=sortBy(item.en)> {{item.cn}} </th> </tr> </thead> <tbody> <template v-if=pageAble> <template v-if=\\\"filterRows.length > 0\\\"> <tr v-for=\\\"item in data | filterBy filterKey | orderBy sortKey sortOrders[sortKey] | limitBy pageSize pageStart\\\"> <td v-if=checkAble><input type=checkbox id={{item[checkedField]}} value={{item[checkedField]}} v-model=checkedFields></td> <td v-if=indexAble>{{indexVal($index)}}</td> <td v-for=\\\"key in columnsEn\\\">{{{ item[key] }}} </td> </tr> </template> <template v-else> <tr><td :colspan=100>没有数据</td></tr> </template> </template> <template v-else> <tr v-for=\\\"item in data | filterBy filterKey | orderBy sortKey sortOrders[sortKey]\\\"> <td v-for=\\\"key in columnsEn\\\">{{{ item[key] }}} </td> </tr> </template> </tbody> </table> </div> <template v-if=pageAble> <pagination :page-size=pageSize :rows-total=filterRows.length :page.sync=page></pagination> </template> </div>\";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/selector.js?type=template&index=0!./src/components/Table.vue\n ** module id = 9\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./App.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./App.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./App.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/App.vue\n ** module id = 10\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Pagination.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Pagination.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Pagination.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Pagination.vue\n ** module id = 11\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"!!./../../node_modules/extract-text-webpack-plugin/loader.js?{\\\"omit\\\":1,\\\"extract\\\":true,\\\"remove\\\":true}!vue-style-loader!css-loader?sourceMap!./../../node_modules/vue-loader/lib/style-rewriter.js!./../../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Table.vue\")\n__vue_script__ = require(\"!!babel-loader?presets[]=es2015&plugins[]=transform-runtime&comments=false!./../../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Table.vue\")\n__vue_template__ = require(\"!!vue-html-loader!./../../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Table.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) {\n(typeof module.exports === \"function\" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/components/Table.vue\n ** module id = 12\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.20\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined') {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n  if (this.size === this.limit) {\n    removed = this.shift();\n  }\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '(.+?)' + unsafeClose + '|' + open + '(.+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '.*' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  text = text.replace(/\\n/g, '');\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n    warn = function (msg, e) {\n      if (hasConsole && (!config.silent || config.debug)) {\n        console.warn('[Vue warn]: ' + msg);\n        /* istanbul ignore if */\n        if (config.debug) {\n          if (e) {\n            throw e;\n          } else {\n            console.warn(new Error('Warning Stack Trace').stack);\n          }\n        }\n      }\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  var doc = document.documentElement;\n  var parent = node && node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        !/^(data|time|rtc|rb)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el) {\n  // dynamic syntax\n  var exp = getAttr(el, 'is');\n  if (exp != null) {\n    return { id: exp };\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.');\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * 0.11 deprecation warning\n */\n\nstrats.paramAttributes = function () {\n  /* istanbul ignore next */\n  process.env.NODE_ENV !== 'production' && warn('\"paramAttributes\" option has been deprecated in 0.12. ' + 'Use \"props\" instead.');\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  var options = {};\n  var key;\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  return assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n}\n\n/**\n * Assert asset exists\n */\n\nfunction assertAsset(val, type, id) {\n  if (!val) {\n    process.env.NODE_ENV !== 'production' && warn('Failed to resolve ' + type + ': ' + id);\n  }\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index.\n *\n * @param {Number} index\n * @param {*} val\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tassertAsset: assertAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initScope().\n    this._data = {};\n\n    // save raw constructor data before merge\n    // so that we know which properties are provided at\n    // instantiation.\n    this._runtimeData = options.data;\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.');\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar booleanLiteralRE = /^(?:true|false)$/;\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid expression. ' + 'Generated function body: ' + body);\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat true/false as paths\n  !booleanLiteralRE.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queueIndex;\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar internalQueueDepleted = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue = [];\n  userQueue = [];\n  has = {};\n  circular = {};\n  waiting = internalQueueDepleted = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  runBatcherQueue(queue);\n  internalQueueDepleted = true;\n  runBatcherQueue(userQueue);\n  // dev tool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n  resetBatcherState();\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (queueIndex = 0; queueIndex < queue.length; queueIndex++) {\n    var watcher = queue[queueIndex];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        queue.splice(has[id], 1);\n        warn('You may have an infinite update loop for watcher ' + 'with expression: ' + watcher.expression);\n      }\n    }\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    if (internalQueueDepleted && !watcher.user) {\n      // an internal watcher triggered by a user watcher...\n      // let's run it immediately after current user watcher is done.\n      userQueue.splice(queueIndex + 1, 0, watcher);\n    } else {\n      // push watcher into appropriate queue\n      var q = watcher.user ? userQueue : queue;\n      has[id] = q.length;\n      q.push(watcher);\n      // queue the flush\n      if (!waiting) {\n        waiting = true;\n        nextTick(flushBatcherQueue);\n      }\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = Object.create(null);\n  this.newDepIds = null;\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression \"' + this.expression + '\". ' + (config.debug ? '' : 'Turn on debug mode to see stack trace.'), e);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter \"' + this.expression + '\"', e);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.');\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n  this.newDepIds = Object.create(null);\n  this.newDeps.length = 0;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds[id]) {\n    this.newDepIds[id] = true;\n    this.newDeps.push(dep);\n    if (!this.depIds[id]) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds[dep.id]) {\n      dep.removeSub(this);\n    }\n  }\n  this.depIds = this.newDepIds;\n  var tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nfunction traverse(val) {\n  var i, keys;\n  if (isArray(val)) {\n    i = val.length;\n    while (i--) traverse(val[i]);\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) traverse(val[keys[i]]);\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n\n  if (!tagMatch && !entityMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment.\n  if (isRealTemplate(node)) {\n    trimNode(node.content);\n    return node.content;\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el)) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar FOR = 2000;\nvar IF = 2000;\nvar SLOT = 2100;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Alias is required in v-for.');\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.before(prevEl.nextSibling);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else {\n        def(value, id, frag);\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = trackByKey ? trackByKey === '$index' ? index : value[trackByKey] : key || value;\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * wathcer's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.');\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.');\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.value = _toString(value);\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', this.forceUpdate);\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model. You might want to use a two-way filter ' + 'to ensure correct behavior.');\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        value = value.replace(importantRE, '').trim();\n      }\n      this.el.style.setProperty(prop, value, isImportant);\n    } else {\n      this.el.style.removeProperty(prop);\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixes[i] + prop;\n    }\n  }\n  if (camel in testEl.style) {\n    return prop;\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.');\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.');\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.');\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      el[attr] = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.');\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (value && typeof value === 'string') {\n      this.handleObject(stringToObject(value));\n    } else if (isPlainObject(value)) {\n      this.handleObject(value);\n    } else if (isArray(value)) {\n      this.handleArray(value);\n    } else {\n      this.cleanup();\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    this.cleanup(value);\n    this.prevKeys = Object.keys(value);\n    setObjectClasses(this.el, value);\n  },\n\n  handleArray: function handleArray(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val && isPlainObject(val)) {\n        setObjectClasses(this.el, val);\n      } else if (val && typeof val === 'string') {\n        addClass(this.el, val);\n      }\n    }\n    this.prevKeys = value.slice();\n  },\n\n  cleanup: function cleanup(value) {\n    if (this.prevKeys) {\n      var i = this.prevKeys.length;\n      while (i--) {\n        var key = this.prevKeys[i];\n        if (!key) continue;\n        if (isPlainObject(key)) {\n          var keys = Object.keys(key);\n          for (var k = 0; k < keys.length; k++) {\n            removeClass(this.el, keys[k]);\n          }\n        } else {\n          removeClass(this.el, key);\n        }\n      }\n    }\n  }\n};\n\nfunction setObjectClasses(el, obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (obj[key]) {\n      addClass(el, key);\n    }\n  }\n}\n\nfunction stringToObject(value) {\n  var res = {};\n  var keys = value.trim().split(/\\s+/);\n  var i = keys.length;\n  while (i--) {\n    res[keys[i]] = true;\n  }\n  return res;\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.');\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.');\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.');\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.');\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  var key = prop.path;\n  value = coerceProp(prop, value);\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop.options);\n  }\n  if (assertProp(prop, value)) {\n    defineReactive(vm, key, value);\n  }\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} options\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, options) {\n  // no default, return undefined\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Object/Array as default prop values will be shared ' + 'across multiple instances. Use a factory function ' + 'to return the default value instead.');\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction assertProp(prop, value) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = true;\n  var expectedType;\n  if (type) {\n    if (type === String) {\n      expectedType = 'string';\n      valid = typeof value === expectedType;\n    } else if (type === Number) {\n      expectedType = 'number';\n      valid = typeof value === 'number';\n    } else if (type === Boolean) {\n      expectedType = 'boolean';\n      valid = typeof value === 'boolean';\n    } else if (type === Function) {\n      expectedType = 'function';\n      valid = typeof value === 'function';\n    } else if (type === Object) {\n      expectedType = 'object';\n      valid = isPlainObject(value);\n    } else if (type === Array) {\n      expectedType = 'array';\n      valid = isArray(value);\n    } else {\n      valid = value instanceof type;\n    }\n  }\n  if (!valid) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid prop: type check failed for ' + prop.path + '=\"' + prop.raw + '\".' + ' Expected ' + formatType(expectedType) + ', got ' + formatValue(value) + '.');\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for ' + prop.path + '=\"' + prop.raw + '\"');\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  // coerce is a function\n  return coerce(value);\n}\n\nfunction formatType(val) {\n  return val ? val.charAt(0).toUpperCase() + val.slice(1) : 'custom type';\n}\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n    var isSimple = isSimplePath(parentKey);\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      val = coerceProp(prop, val);\n      if (assertProp(prop, val)) {\n        if (isSimple) {\n          withoutConversion(function () {\n            child[childKey] = val;\n          });\n        } else {\n          child[childKey] = val;\n        }\n      }\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    var value = parentWatcher.value;\n    if (isSimple && value !== undefined) {\n      withoutConversion(function () {\n        initProp(child, prop, value);\n      });\n    } else {\n      initProp(child, prop, value);\n    }\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    if (oldId) {\n      removeClass(el, oldId + '-transition');\n    }\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && el.tagName !== 'SCRIPT' && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment_Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && node.tagName !== 'SCRIPT') {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = value;\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    modifiers = parseModifiers(attr.name);\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.');\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName);\n\n              if (process.env.NODE_ENV !== 'production') {\n                assertAsset(dirDef, 'directive', dirName);\n              }\n\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value)) {\n      value.trim().split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.');\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.');\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.');\n    }\n    var props = this._props;\n    var runtimeData = this._runtimeData ? typeof this._runtimeData === 'function' ? this._runtimeData() : this._runtimeData : null;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key) || runtimeData && hasOwn(runtimeData, key) && props[key].raw === null) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. Use prop default value instead.');\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        handler = (vm._scope || vm._context).$eval(attrs[i].value, true);\n        if (typeof handler === 'function') {\n          handler._fromParent = true;\n          vm.$on(name.replace(eventRE), handler);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn('v-on:' + name + '=\"' + attrs[i].value + '\"' + (vm.$options.name ? ' on component <' + vm.$options.name + '>' : '') + ' expects a function value, got ' + handler);\n        }\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".');\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(fn, 'filter', filter.name);\n      }\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value);\n      if (process.env.NODE_ENV !== 'production') {\n        assertAsset(factory, 'component', value);\n      }\n    }\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement && !isSimplePath(exp)) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.');\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id);\n    if (process.env.NODE_ENV !== 'production') {\n      assertAsset(partial, 'partial', id);\n    }\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = toArray(arguments, n).reduce(function (prev, cur) {\n    return prev.concat(cur);\n  }, []);\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} sortKey\n * @param {String} reverse\n */\n\nfunction orderBy(arr, sortKey, reverse) {\n  arr = convertArray(arr);\n  if (!sortKey) {\n    return arr;\n  }\n  var order = reverse && reverse < 0 ? -1 : 1;\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(function (a, b) {\n    if (sortKey !== '$key') {\n      if (isObject(a) && '$value' in a) a = a.$value;\n      if (isObject(b) && '$value' in b) b = b.$value;\n    }\n    a = isObject(a) ? getPath(a, sortKey) : a;\n    b = isObject(b) ? getPath(b, sortKey) : b;\n    return a === b ? 0 : a > b ? order : -order;\n  });\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, Number(indent) || 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   */\n\n  currency: function currency(value, _currency) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    var stringified = Math.abs(value).toFixed(2);\n    var _int = stringified.slice(0, -3);\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = stringified.slice(-3);\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    return args.length > 1 ? args[value % 10 - 1] || args[args.length - 1] : args[0] + (value === 1 ? '' : 's');\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = id;\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.20';\n\n// devtools global hook\n/* istanbul ignore next */\nif (config.devtools) {\n  if (devtools) {\n    devtools.emit('init', Vue);\n  } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n    console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n  }\n}\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 13\n ** module chunks = 0\n **/"],"sourceRoot":""}